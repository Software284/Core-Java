Streams:-> if we want to process the objects from the collections then we should go for streams
concept.io streams meant for representing data with respect to file I/O while util package streams 
meant for process data from collection.

Program sequence:->
program of finding even number in list without streams
program of finding even number in list with stream
program to double list value without stream
program to double list value with stream map configuration

Difference Between map and filter method:->
Streams s = c.stream();
where 
c is any collection object
stream() this method present inside collection interface as default method
Stream is an interface present in java.util.Stream package.

Note: the no of objects because of filter is less than orginal object.in case of
map the orginal objects in list and and new list is always must be same.

Filtering:->
-> if we want to filter elements from the collection based on some boolean conditions,then we should
go for filtering.
-> we can configure filter by using filter method of stream interface
public Stream filter(Predicate<T> t);
here predicate can be boolean valued function or lambda expression
Eg:-> Stream s1 = c.stream().filter(i -> i % 2 == 0);

Mapping:->
-> if we want to create a separate new object for every object present in the collection based on some function
then we should go for mapping mechanism.
-> we can implement mapping by using map() method of stream interface.
public Stream map(Function<T,R> f)
Eg: 
Stream s1 = c.stream().map(i -> i *2);

Processing by collect() method:-> this method collects the elements from the stream and adding
to the specified collection.
Eg: AL<String> l = new AL<String>();
l.add("Pawan");
l.add("RaviTeja");
l.add("chiranjeevi");
l.add("venkatesh");
l.add(Nagarjuna");

Program sequence:->





















