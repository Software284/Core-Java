Generics:->
-> the main objectives of generics are to provide type safety and to resolve type casting problems.
-> arrays are type safe that is we can give the gurantee for the type of elements present inside array.
for example:->if our programming requirement is to hold only string type of objects we can choose string
array.by mistake if we are trying to add any other type of objects we will get compile time error.

String[] s = new String[10000];
s[0] = "durga";
s[1] = "ravi";
s[2] = new Integer(10); CE:incompatible type found in java.lang.String
s[2] = "shiva";

hence String array can contain only string type of objects.due to this we can give the gurantee for the type
of elements present inside array.hence arrays are safe to use with the respect to type.i.e arrays are type
safe.

-> but collections are not type safe that is we can't give the gurantee for type of elements present inside
collections.
for example:-> if our programming requirement is to hold only string type of objects and if we choose arraylist
by mistake if we are tying to add any other type of object we won't get any compile time error but the program
may fail at runtime during accessing that object by type casting with string.