Arithmatic Operator(+,-,*,/,%):->
-> if we apply any arithmatic operator between two variables a and b the result type is always max(int,type_of_a,type_of
_b);
byte + byte = int
byte + short = int
short + short = int
byte + long = long
long + double = double
float + long = float
char + char = int

Example:
sysout('a'+0.90); // 97.90
sysout('a'+'b'); // 195
========================================================================================================================
-> in integral arithmatic(byte,short,int,long) there is no way to represent infinity hence if infinity is a
result we will get arithmatic exception in integral arithmatic.
Example:
sysout(10/0); //RE:Arithmatic Exception divisible by 0

but in floating point arithmatic(float,double) there is a way to represent infinity.for this float and double classes
contains the following 2 constants
	-> POSITIVE_INFINITY
	-> NEGATIVE_INFINITY
hence even though result is infinity we won't get any arithmatic exception in floating point arithmatic.
Example:
sysout(10/0.0); // POSITIVE_INFINITY
sysout(-10/0.0); // NEGATIVE_INFINITY


syosut(0/0); //RE: ArithmeticException divisible by 0
syosut(0.0/0);












d